@startuml
!theme plain
top to bottom direction

package "distributed" {

    package "interfaces" {

        interface GameServerActions << interface >> {
            + connectToGame(UserInfo, GameViewActions): void
            + transmitCommand(GameCommand): void
        }
        interface GameViewActions << interface >> {
            + transmitEvent(GameEvent): void
        }
        interface MainServerActions << interface >> {
            + reconnect(UserInfo, MainViewActions, GameViewActions): void
            + connectToMain(String, MainViewActions, GameViewActions): void
            + transmitCommand(MainCommand): void
        }
        interface MainViewActions << interface >> {
            + trasmitEvent(MainEvent): void
            + setGameServer(GameServerActions): void
        }

    }

    package "client" {

        package "rmi" {

            class RMIGameView implements distributed.interfaces.GameViewActions {
                - gameEventHandler: GameEventHandler
                + transmitEvent(GameEvent): void
            }
            class RMIMainView implements distributed.interfaces.MainViewActions {
                - connectionHandler: RMIConnectionHandler
                - mainEventHandler: MainEventHandler
                + trasmitEvent(MainEvent): void
                + setGameServer(GameServerActions): void
            }

        }

        class ConnectionHandler {
            + isConnected: AtomicBoolean
            + lastKeepAliveTime: long
            + userInterface: UI
            + sendToGameServer(GameCommand): boolean
            + connect(ConnectionCommand): boolean
            + reconnect(): boolean
            + sendToMainServer(MainCommand): boolean
        }

        class RMIConnectionHandler extends ConnectionHandler {
            - mainServerActions: MainServerActions
            - gameServerActions: GameServerActions
        }
        class SocketConnectionHandler extends ConnectionHandler {
            - outputStream: ObjectOutputStream
            - socket: Socket
            - inputStream: ObjectInputStream
            - createListenerThread(): void
        }

    }

}

@enduml
